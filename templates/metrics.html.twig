{% extends "base.html.twig" %}

{% block title %}Metrics analys{% endblock %}

{% block body %}
    <h1>Metrics analys</h1>

    <h2>Introduktion</h2>

    <p>Bättre kod som förbättrar kodkvalite kan uppnås genom att följa de sex C:na för clean code. Dessa C är Codestyle, Coverage, Complexity, Cohesion, Coupling samt CRAP.</p>
        
    <ul>
        <li>Codestyle avser hur väl strukturerad ens kod är sam hur den är uppbyggd. Att vara konsekvent i ens kod och skriva lättförståelig kod är av stor vikt för att underlätta arbetet för andra om man arbetar i grupp, göra det smidigt vid felsökning, etc.</li>
        <li>Coverage visar i vilken grad koden är testad; detta värde visar hur stor del av ens kod är testad. Har man ett högt värde kan man se att koden är väl testad och säker. Är värdet lågt kan det innebära ett lägre kvalite och potentiell risk för fel.</li>
        <li>Complexity innebär hur komplex koden är i form av loopar, if-satser, etc. Ett högre komplexitet visar på mycket komplex kod som kan vara svår att underhålla. Ett låg komplexitet visar på att koden är enkelare att underhålla och utveckla.</li>
        <li>Cohesion visar hur klasserna och metoderna håller ihop, hur avgränsade metoderna är och hur de håller ihop i klassen. Har man ett lågt värde så innebär det hög grad av cohesion, vilket betyder att klasserna faktisk har avgränsade ansvarsområden. Är det tvärtom så innebär det låg cohesion vilket visar på att klasserna har flera ansvarsområden.</li>
        <li>Coupling  är ett värde som visar exempelvisar hur vissa klasser är beroende av varandra för att fungera. Ändrar man i en klass så riskerar man att det påverkar en annan, som i sin tur kan skapa oväntade problem. Ett högt värde visar på att klasser är mycket beroende av varandra och ett lågt värde tvärtom.</li>
        <li>CRAP står för Change Risk Analyzer and Predictor som är ett värde som visar på kodkomplexitet i förhållande till kodens testtäckning. Ju högre värde desto mer komplext kod som inte är dålig testad. Har man en hög testgrad på sin kod och låg komplexitet kan man minska detta värde.</li>
    </ul>

    <h2>Phpmetrics</h2>

    <p>När jag testade min kod me/report i Phpmetricts visade i Codestyle att det fanns 10 Violations i min kod, varav 8 var Warnings och 2 Errors. Där kunde jag se att varningarna berodde på att 3 av mina App\Controller same 5 av mina App\ var sannolika att innehålla buggar. För att unvika detta hade enhetstester för dessa Controller behövts implementeras. För namespacen innebär det att det att dessa är instabila och har flera beroende.</p>
    <p>Det var även två av dessa Controller som hader Error-varning för att klasserna har flera ansvarsområden, vilket gör de svåra att testa och underhålla utan problem. I dessa fall hade man behövt dela upp klasserna i mindre klasser med mer specifika ansvarsområden.</p>
    
    <a href="{{ asset('img/violations.png') }}">
        <img src="{{ asset('img/violations.png') }}" alt="violations">
    </a>

    <a href="{{ asset('img/coupling.png') }}">
        <img src="{{ asset('img/coupling.png') }}" alt="coupling">
    </a>

    <p>Med Phpmetricts kan man även se hur beroende klasserna är gentemot varandra, Coupling. Man kan se att klaaserna längst upp har 3 andra klasser som är beroende av denna. Dessa klasser är ändå väldigt stabila eftersom att den inte är beroende själv av andra klasser. Däremot den tredje klassen kan man se att den är beroende av 2 andra klasser och själv är beroende av 2 klasser. Man kan då se att denna är lite instabil eftersom att den kan vara känslig för vissa ändringar.</p>

    <p>I kodkomplexitet, Complexity, kan man se att värdet för min kod är 6.92. Ju högre värde här desto mer komplex är koden per klass. Ihop med Cyclomatic complexity kan man se hur svår koden är att underhålla och testa, eftersom att den är komplex. Man kan se att den första klassen har en väldigt hög komplexitet på 121 och inga tester, vilket kan göra den sårbar.</p>

    <a href="{{ asset('img/complexity.png') }}">
        <img src="{{ asset('img/complexity.png') }}" alt="complexity">
    </a>

    <h2>Scrutinizer</h2>

    <div class="scrutinizer">

        <a href="https://scrutinizer-ci.com/g/gitalsg/mvc/?branch=master">
            <img src="https://scrutinizer-ci.com/g/gitalsg/mvc/badges/quality-score.png?b=master">
        </a>

        <a href="https://scrutinizer-ci.com/g/gitalsg/mvc/?branch=master">
            <img src="https://scrutinizer-ci.com/g/gitalsg/mvc/badges/coverage.png?b=master">
        </a>

        <a href="https://scrutinizer-ci.com/g/gitalsg/mvc/?branch=master">
            <img src="https://scrutinizer-ci.com/g/gitalsg/mvc/badges/build.png?b=master">
        </a>

        <a href="https://scrutinizer-ci.com/g/gitalsg/mvc/?branch=master">
            <img src="https://scrutinizer-ci.com/g/gitalsg/mvc/badges/code-intelligence.svg?b=master">
        </a>
    </div>

    
    <footer class="site-footer">
        <p>&copy; A.S. Objektorienterade webbteknologier; MVC</p>
    </footer>

{% endblock %}
