{% extends "base.html.twig" %}

{% block title %}Kmom04{% endblock %}

{% block body %}
    <h1>Kmom04</h1>
    <h2>Redovisningstext Kmom04:</h2>
    <p>Skriva kod som tester ens kod var väldigt klurigt i början. Det var svårt att veta hur man skulle testa de specifika metorderna, på vilket sätt de skulle testas. Men efter några gånger så släppte det lite och man kom i det test-tänket för att skriva testerna. Det var smidigt att hitta information om hur PHPUnit fungerar och hur man skulle använda sig av assertions metods. Det var nog det som var svårt i början, att veta hur man skulle skriva testerna men när man väl förstod hur man skulle använda assert i sin test så gick det framåt. Rent allmänt känns det bra att använda PHPUnit för att testa ens kod. Jag lyckades få en kodtäckning på 100% för mina klasser i mitt spel, som hittas under Game. Jag satsade på hög kodtäckning men när man väl hade kommit in i testerna så var det smidigt att skriva en test för varje metod och då blev det 100% kodtäckning. Jag tror att det var för att min kod var väldigt testar. Det är inga komplexa klasser eller metoder så det var inte så svårt att testa. Det var mest utmanande att skriva själva testerna men de flesta funktioner var simpla. Det var lite svårare att testa de funktionerna som innehöll en while-loop eller foreach, men tillslut så gick det att få fram test för de med.</p>
    <p>Jag behövde inte skriva om min kod för att få den mer testbar, men jag funderade på om det fanns kanske andra vägar att gå för att testa exempelvis grafiken på korten. Det var lite klurigt också att komma på hur man skulle testa när esset var ett eller fjorton men det var nog mest betänketid som behövdes. Att skriva testbar kod är nog av stor vikt; skriva kod som är simpelt från början. Detta underlätta sedan att kunna testa små delar för sig än att skriva mycket komplexa klasser som också kräver komplexa test. Jag hade från början skrivit väldigt uppdelade klasser, vilket jag tror hjälpe mig när jag väl skulle skriva kod för att testa det. Så min TIL för detta krom är nog det, att skriva bra och någorlunda simpla klasser/funktioner som inte innehåller flera komplexa delar i ett. På väs vis uppnå en väldig testbar kod.</p>
<footer class="site-footer">
    <p>&copy; A.S. Objektorienterade webbteknologier; MVC</p>
</footer>

{% endblock %}
